{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Covid_Web\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style/App.css\";\nimport { MenuItem, FormControl, Select, CardContent, Card } from \"@material-ui/core\";\nimport InfoBox from \"./Components/InfoBox\";\nimport Map from \"./Components/Map\";\nimport Table from \"./Components/Table\";\nimport { sortData, prettyPrintStat } from \"./Components/util\";\nimport LineGraph from \"./Components/LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./InfoBox.css\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    setLoading(true);\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`; //https://disease.sh/v3/covid-19/all\n    //https://disease.sh/v3/covid-19/countries/[countryCode]\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setLoading(false); // console.log([data.countryInfo.lat, data.countryInfo.long]);\n\n      countryCode === \"worldwide\" ? setMapCenter([34.80746, -40.4796]) : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setZoom(4);\n    });\n    console.log(countryInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-warning\",\n          children: \"Covid-19 tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown bg-light\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"cases\",\n          className: \"infoBox__cases\",\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          total: prettyPrintStat(countryInfo.cases),\n          cases: prettyPrintStat(countryInfo.todayCases),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          className: \"infoBox__recovered\",\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\",\n          total: prettyPrintStat(countryInfo.recovered),\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          isGrey: true,\n          active: casesType === \"deaths\",\n          className: \"infoBox__deaths\",\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          total: prettyPrintStat(countryInfo.deaths),\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        center: mapCenter,\n        zoom: zoom,\n        casesType: casesType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"bg-dark text-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-danger\",\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app__graphTitle text-danger\",\n          children: [\"WorldWide new \", casesType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          className: \"app__graph\",\n          casesType: casesType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5x6b39jnbG9pwkXZNPsRtTBrG0U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Covid_Web/client/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","CardContent","Card","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","zoom","setZoom","mapCountries","setMapCountries","casesType","setCasesType","isLoading","setLoading","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","lat","long","console","log","e","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,IALF,QAMO,mBANP;AAOA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,mBAA1C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,0BAAP;AACA,OAAO,eAAP;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,WAAD,CAAtC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,CAAC,QAAD,EAAW,CAAC,OAAZ,CAAD,CAA1C;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAM,CAAC6B,SAAD,EAAYC,UAAZ,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdjB,MAAAA,cAAc,CAACiB,IAAD,CAAd;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQApC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqC,gBAAgB,GAAG,YAAY;AACnC,YAAML,KAAK,CAAC,0CAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACd,cAAMtB,SAAS,GAAGsB,IAAI,CAACE,GAAL,CAAUtB,OAAD,KAAc;AACvCuB,UAAAA,IAAI,EAAEvB,OAAO,CAACA,OADyB;AAEvCwB,UAAAA,KAAK,EAAExB,OAAO,CAACE,WAAR,CAAoBuB;AAFY,SAAd,CAAT,CAAlB;AAKA,cAAMC,UAAU,GAAGhC,QAAQ,CAAC0B,IAAD,CAA3B;AACAf,QAAAA,YAAY,CAACqB,UAAD,CAAZ;AACAf,QAAAA,eAAe,CAACS,IAAD,CAAf;AACArB,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OAZG,CAAN;AAaD,KAdD;;AAgBAuB,IAAAA,gBAAgB;AACjB,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMM,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvCb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMc,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC;AAEAvB,IAAAA,UAAU,CAAC4B,WAAD,CAAV;AAEA,UAAME,GAAG,GACPF,WAAW,KAAK,WAAhB,GACI,oCADJ,GAEK,4CAA2CA,WAAY,EAH9D,CANuC,CAWvC;AACA;;AAEA,UAAMb,KAAK,CAACe,GAAD,CAAL,CACHd,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACdnB,MAAAA,UAAU,CAAC4B,WAAD,CAAV;AACA1B,MAAAA,cAAc,CAACiB,IAAD,CAAd;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV,CAHc,CAId;;AACAc,MAAAA,WAAW,KAAK,WAAhB,GACItB,YAAY,CAAC,CAAC,QAAD,EAAW,CAAC,OAAZ,CAAD,CADhB,GAEIA,YAAY,CAAC,CAACa,IAAI,CAAClB,WAAL,CAAiB8B,GAAlB,EAAuBZ,IAAI,CAAClB,WAAL,CAAiB+B,IAAxC,CAAD,CAFhB;AAGAxB,MAAAA,OAAO,CAAC,CAAD,CAAP;AACD,KAXG,CAAN;AAaAyB,IAAAA,OAAO,CAACC,GAAR,CAAYjC,WAAZ;AACD,GA5BD;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,wBAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,QAAQ,EAAEyB,eAFZ;AAGE,YAAA,KAAK,EAAE3B,OAHT;AAAA,oCAKE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAMGF,SAAS,CAACwB,GAAV,CAAetB,OAAD,iBACb,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,OAAO,CAACwB,KAAzB;AAAA,wBAAiCxB,OAAO,CAACuB;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,OAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,MAAM,EAAEX,SAAS,KAAK,OAFxB;AAGE,UAAA,SAAS,EAAC,gBAHZ;AAIE,UAAA,OAAO,EAAGwB,CAAD,IAAOvB,YAAY,CAAC,OAAD,CAJ9B;AAKE,UAAA,KAAK,EAAC,mBALR;AAME,UAAA,KAAK,EAAElB,eAAe,CAACO,WAAW,CAACmC,KAAb,CANxB;AAOE,UAAA,KAAK,EAAE1C,eAAe,CAACO,WAAW,CAACoC,UAAb,CAPxB;AAQE,UAAA,SAAS,EAAExB;AARb;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,OAAD;AACE,UAAA,MAAM,EAAEF,SAAS,KAAK,WADxB;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAGE,UAAA,OAAO,EAAGwB,CAAD,IAAOvB,YAAY,CAAC,WAAD,CAH9B;AAIE,UAAA,KAAK,EAAC,WAJR;AAKE,UAAA,KAAK,EAAElB,eAAe,CAACO,WAAW,CAACqC,SAAb,CALxB;AAME,UAAA,KAAK,EAAE5C,eAAe,CAACO,WAAW,CAACsC,cAAb,CANxB;AAOE,UAAA,SAAS,EAAE1B;AAPb;AAAA;AAAA;AAAA;AAAA,gBAXF,eAoBE,QAAC,OAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,MAAM,EAAEF,SAAS,KAAK,QAFxB;AAGE,UAAA,SAAS,EAAC,iBAHZ;AAIE,UAAA,OAAO,EAAGwB,CAAD,IAAOvB,YAAY,CAAC,QAAD,CAJ9B;AAKE,UAAA,KAAK,EAAC,QALR;AAME,UAAA,KAAK,EAAElB,eAAe,CAACO,WAAW,CAACuC,MAAb,CANxB;AAOE,UAAA,KAAK,EAAE9C,eAAe,CAACO,WAAW,CAACwC,WAAb,CAPxB;AAQE,UAAA,SAAS,EAAE5B;AARb;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAgDE;AAAA;AAAA;AAAA;AAAA,cAhDF,eAiDE;AAAA;AAAA;AAAA;AAAA,cAjDF,eAqDE,QAAC,GAAD;AACE,QAAA,SAAS,EAAEJ,YADb;AAEE,QAAA,MAAM,EAAEJ,SAFV;AAGE,QAAA,IAAI,EAAEE,IAHR;AAIE,QAAA,SAAS,EAAEI;AAJb;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6DE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,oBAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAER;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,uCAA2DQ,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,YAArB;AAAkC,UAAA,SAAS,EAAEA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0ED;;GA/IQf,G;;KAAAA,G;AAiJT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style/App.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  CardContent,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport InfoBox from \"./Components/InfoBox\";\r\nimport Map from \"./Components/Map\";\r\nimport Table from \"./Components/Table\";\r\nimport { sortData, prettyPrintStat } from \"./Components/util\";\r\nimport LineGraph from \"./Components/LineGraph\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./InfoBox.css\";\r\n\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\r\n  const [zoom, setZoom] = useState(3);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setMapCountries(data);\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    setLoading(true);\r\n    const countryCode = event.target.value;\r\n\r\n    setCountry(countryCode);\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    //https://disease.sh/v3/covid-19/all\r\n    //https://disease.sh/v3/covid-19/countries/[countryCode]\r\n\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryInfo(data);\r\n        setLoading(false);\r\n        // console.log([data.countryInfo.lat, data.countryInfo.long]);\r\n        countryCode === \"worldwide\"\r\n          ? setMapCenter([34.80746, -40.4796])\r\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n        setZoom(4);\r\n      });\r\n\r\n    console.log(countryInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <h1 className=\"text-warning\">Covid-19 tracker</h1>\r\n          <FormControl className=\"app__dropdown bg-light\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              onChange={onCountryChange}\r\n              value={country}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"app__stats\">\r\n          <InfoBox\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            className=\"infoBox__cases\"\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"Coronavirus Cases\"\r\n            total={prettyPrintStat(countryInfo.cases)}\r\n            cases={prettyPrintStat(countryInfo.todayCases)}\r\n            isloading={isLoading}\r\n          />\r\n          <InfoBox\r\n            active={casesType === \"recovered\"}\r\n            className=\"infoBox__recovered\"\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"Recovered\"\r\n            total={prettyPrintStat(countryInfo.recovered)}\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            isloading={isLoading}\r\n          />\r\n          <InfoBox\r\n            isGrey\r\n            active={casesType === \"deaths\"}\r\n            className=\"infoBox__deaths\"\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"Deaths\"\r\n            total={prettyPrintStat(countryInfo.deaths)}\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            isloading={isLoading}\r\n          />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n\r\n        {/* Map */}\r\n\r\n        <Map\r\n          countries={mapCountries}\r\n          center={mapCenter}\r\n          zoom={zoom}\r\n          casesType={casesType}\r\n        />\r\n      </div>\r\n      <Card className=\"app__right\">\r\n        <CardContent className=\"bg-dark text-light\">\r\n          <h1 className=\"text-danger\">Live Cases by Country</h1>\r\n          <Table countries={tableData} />\r\n          <h1 className=\"app__graphTitle text-danger\">WorldWide new {casesType}</h1>\r\n          <LineGraph className=\"app__graph\" casesType={casesType} />\r\n        </CardContent>\r\n        {/* Table */}\r\n        {/* Graph */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}