[{"E:\\Covid_Web\\client\\src\\index.js":"1","E:\\Covid_Web\\client\\src\\App.js":"2","E:\\Covid_Web\\client\\src\\Components\\DisplayHis.js":"3","E:\\Covid_Web\\client\\src\\Components\\Navigation.js":"4","E:\\Covid_Web\\client\\src\\Components\\InfoBox.js":"5","E:\\Covid_Web\\client\\src\\Components\\Map.js":"6","E:\\Covid_Web\\client\\src\\Components\\util.js":"7","E:\\Covid_Web\\client\\src\\Components\\LineGraph.js":"8","E:\\Covid_Web\\client\\src\\Components\\Table.js":"9","E:\\New folder\\Covid19_Web\\client\\src\\index.js":"10","E:\\New folder\\Covid19_Web\\client\\src\\App.js":"11","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Navigation.js":"12","E:\\New folder\\Covid19_Web\\client\\src\\Components\\InfoBox.js":"13","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Table.js":"14","E:\\New folder\\Covid19_Web\\client\\src\\Components\\util.js":"15","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Map.js":"16","E:\\New folder\\Covid19_Web\\client\\src\\Components\\LineGraph.js":"17","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Form\\HealthForm.js":"18","E:\\New folder\\Covid19_Web\\client\\src\\Components\\LoginForm.js":"19","E:\\New folder\\Covid19_Web\\client\\src\\Components\\RegisterForm.js":"20","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Buttons.js":"21","E:\\New folder\\Covid19_Web\\client\\src\\Components\\ProfilePage.js":"22","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Success.js":"23","E:\\New folder\\Covid19_Web\\client\\src\\Components\\HistoryCard.js":"24"},{"size":507,"mtime":1630675341453,"results":"25","hashOfConfig":"26"},{"size":5201,"mtime":1630676018133,"results":"27","hashOfConfig":"26"},{"size":846,"mtime":1630675009222,"results":"28","hashOfConfig":"26"},{"size":3181,"mtime":1630677750007,"results":"29","hashOfConfig":"26"},{"size":1121,"mtime":1630675829726,"results":"30","hashOfConfig":"26"},{"size":849,"mtime":1630675607396,"results":"31","hashOfConfig":"26"},{"size":1957,"mtime":1630675403402,"results":"32","hashOfConfig":"26"},{"size":2338,"mtime":1630675394869,"results":"33","hashOfConfig":"26"},{"size":769,"mtime":1630675612148,"results":"34","hashOfConfig":"26"},{"size":481,"mtime":1631283381766,"results":"35","hashOfConfig":"36"},{"size":5162,"mtime":1631680950457,"results":"37","hashOfConfig":"36"},{"size":4417,"mtime":1631799611586,"results":"38","hashOfConfig":"36"},{"size":1121,"mtime":1630679541280,"results":"39","hashOfConfig":"36"},{"size":769,"mtime":1630679541281,"results":"40","hashOfConfig":"36"},{"size":1957,"mtime":1630679541281,"results":"41","hashOfConfig":"36"},{"size":849,"mtime":1630679541281,"results":"42","hashOfConfig":"36"},{"size":2338,"mtime":1630679541281,"results":"43","hashOfConfig":"36"},{"size":5763,"mtime":1631710131383,"results":"44","hashOfConfig":"36"},{"size":2012,"mtime":1631799092619,"results":"45","hashOfConfig":"36"},{"size":3977,"mtime":1631806481387,"results":"46","hashOfConfig":"36"},{"size":848,"mtime":1631680501775,"results":"47","hashOfConfig":"36"},{"size":2253,"mtime":1631799068800,"results":"48","hashOfConfig":"36"},{"size":337,"mtime":1631696482342,"results":"49","hashOfConfig":"36"},{"size":2283,"mtime":1631799105767,"results":"50","hashOfConfig":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jcrc09",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ct9ht1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},"E:\\Covid_Web\\client\\src\\index.js",["105"],"E:\\Covid_Web\\client\\src\\App.js",[],"E:\\Covid_Web\\client\\src\\Components\\DisplayHis.js",[],["106","107"],"E:\\Covid_Web\\client\\src\\Components\\Navigation.js",[],"E:\\Covid_Web\\client\\src\\Components\\InfoBox.js",[],"E:\\Covid_Web\\client\\src\\Components\\Map.js",[],"E:\\Covid_Web\\client\\src\\Components\\util.js",[],"E:\\Covid_Web\\client\\src\\Components\\LineGraph.js",[],"E:\\Covid_Web\\client\\src\\Components\\Table.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\index.js",[],["108","109"],"E:\\New folder\\Covid19_Web\\client\\src\\App.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\Navigation.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\InfoBox.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\Table.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\util.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\Map.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\LineGraph.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\Form\\HealthForm.js",["110","111"],"import React from 'react'\r\nimport './HealthForm.css'\r\nimport axios from 'axios'\r\nimport {Form, Row, Button, Col, Container, Jumbotron } from 'react-bootstrap';\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\n\r\nexport default function HealthForm() {\r\n    const[email, setEmail] = React.useState('')\r\n    const[idNum, setIdNum] = React.useState('')\r\n    const[country, setCountry] = React.useState('')\r\n    const[symptoms, setSymptoms] = React.useState('')\r\n    const[beenCountry, setBeenCountry] = React.useState('')\r\n    const[isolated, setIsolated] = React.useState('')\r\n    const [error, setError] = React.useState('')\r\n    const endPoint = \"http://localhost:4000/forms\"\r\n\r\n\r\n\r\n\r\n\r\n    const submitHandle = async(e)=>{\r\n        e.preventDefault()\r\n        const config = {\r\n            header:{\"Content-Type\":'application/json'}\r\n        }\r\n        try {\r\n            const {data} =await axios.post(endPoint,{\r\n                email:email,\r\n                idNum:idNum,\r\n                country:country,\r\n                symptoms:symptoms,\r\n                beenCountry:beenCountry,\r\n                isolated:isolated\r\n            },config)\r\n            window.location = '/success'\r\n        } catch (error) {\r\n            setError(error.response.data.error)\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },5000)\r\n        }\r\n    }\r\n    return (\r\n        \r\n        <Container className = \"container\">\r\n            <Row>\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                <Jumbotron>\r\n                    <h1>MEDICAL REPORT FORM</h1>\r\n                    <Form >\r\n                    <Form.Group>\r\n                        <h4>Personal information, Disease - Isolation - Exposure History</h4>\r\n                        {error&&<p style={{color:\"red\"}}>*{error}</p>}\r\n                        <Form.Label>First Name<span> (*)</span></Form.Label>\r\n                        <Form.Row>\r\n                        <Col>\r\n                            <Form.Control type=\"text\" name=\"firstName\"></Form.Control>\r\n                        </Col>\r\n                        <Form.Label>Last Name<span> (*)</span></Form.Label>\r\n                        <Col>\r\n                            <Form.Control type=\"text\" name = \"lastName\"></Form.Control>\r\n                        </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email<span> (*)</span></Form.Label>\r\n                        <Form.Control type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTel\">\r\n                        <Form.Label>Contact phone number<span> (*)</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"telephone\"\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridTel\">\r\n                        <Form.Label>Your ID number<span> (*)</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={idNum} onChange={(e)=>setIdNum(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Label>Enter your country<span> (*)</span></Form.Label>\r\n                        <br></br>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={country} onChange={(e)=>setCountry(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Contact address<span> (*)</span></Form.Label>\r\n                        <Form.Control placeholder=\"\" />\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCityZip\">\r\n                        <Form.Label>Which symptoms have you experienced within the past 14 days?<span> (*)</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"                       \r\n                            value={symptoms} onChange={(e)=>setSymptoms(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Label>Have you recently been directed to self-isolate or quarantine (Yes or No):<span> (*)</span></Form.Label>\r\n                        <Form.Control placeholder=\"\"value={isolated} onChange={(e)=>setIsolated(e.target.value)} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridArrive\">\r\n                        <Form.Label>Which country have you been to for the last 14 days?<span> (*)</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={beenCountry} onChange={(e)=>setBeenCountry(e.target.value)}\r\n                        />\r\n                        </Form.Group>  \r\n                    <br />\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={submitHandle}>\r\n                    Submit\r\n                </Button>\r\n                    </Form>\r\n                </Jumbotron>\r\n                \r\n                \r\n                </Col>\r\n                \r\n                \r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n","E:\\New folder\\Covid19_Web\\client\\src\\Components\\LoginForm.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\RegisterForm.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\Buttons.js",["112"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {  Link } from 'react-router-dom'\r\n\r\nfunction Buttons() {\r\n    const [isLogged, setIsLogged] = React.useState(false)\r\n    React.useEffect(()=>{\r\n        if(localStorage.getItem('authToken'))\r\n        return setIsLogged(true)\r\n    },[])\r\n    const logOutHandle = ()=>{\r\n        localStorage.clear()\r\n        window.location = '/signIn'\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n           {isLogged\r\n           ?    <Link className=\"btn btn-primary rounded-pill me-3\" onClick={logOutHandle} >Log Out</Link>\r\n           :<>\r\n            <Link className=\"btn btn-primary rounded-pill me-3\" to=\"/signIn\">Sign In</Link>\r\n            <Link className=\"btn btn-primary rounded-pill\" to=\"/register\">Register</Link>\r\n           </> \r\n        }\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Buttons\r\n","E:\\New folder\\Covid19_Web\\client\\src\\Components\\ProfilePage.js",["113","114","115","116","117","118"],"import React,{useState} from 'react'\r\nimport { Row } from 'react-bootstrap';\r\nimport '../style/profile.css'\r\n\r\nexport default function ProfilePage() {\r\n  const [data,setData] = useState([])\r\n  // const [newData,setNewData] = useState([])\r\n  const endPoint = '/users'\r\n  React.useEffect(() => {\r\n    fetch(endPoint)\r\n      .then(response => response.json())\r\n      .then(data => setData(data));\r\n    // for(let i = 0;i<data.length;i++){\r\n    //   const setNewData(data.indexOf(i))\r\n    //   if\r\n\r\n\r\n\r\n    // }\r\n  }, [])\r\n \r\n  \r\n    return (\r\n      <div className=\"container\" style={{background:'#292b2c'}}>\r\n        {/* <img src={img}className=\"img-circle\" /><br/>\r\n        <input type=\"file\" value={img} onChange={(e)=>setImg(e.target.value)}/><br /> */}\r\n        <Row sm='1'>\r\n          <h3>Full Name:</h3>{data.map(a=>{\r\n            if(a.email === localStorage.getItem(\"email\"))\r\n            return(<p className=\"information\">{a.name}</p>)\r\n          })}\r\n        </Row>\r\n        <Row sm='1'>\r\n        <h3>Date of birth:</h3>{data.map(a=>{\r\n            if(a.email === localStorage.getItem(\"email\"))\r\n            return(<p className=\"information\">{a.dob}</p>)\r\n          })}\r\n        </Row>\r\n        <Row sm='1'>\r\n        <h3>Email:</h3>{data.map(a=>{\r\n            if(a.email === localStorage.getItem(\"email\"))\r\n            return(<p className=\"information\">{a.email}</p>)\r\n          })}\r\n        </Row>\r\n        <Row sm='1'>\r\n        <h3>Phone:</h3>{data.map(a=>{\r\n            if(a.email === localStorage.getItem(\"email\"))\r\n            return(<p className=\"information\">{a.phone}</p>)\r\n          })}\r\n        </Row>\r\n        <Row sm='1'>\r\n        <h3>Address:</h3>{data.map(a=>{\r\n            if(a.email === localStorage.getItem(\"email\"))\r\n            return(<p className=\"information\">{a.address}</p>)\r\n          })}\r\n        </Row>\r\n      </div>\r\n    )\r\n}\r\n\r\n{/* <div><h3>Email:</h3><p className=\"information\">example@gmail.com</p></div>\r\n<div><h3>Date of birth:</h3><p className=\"information\">02/01/2000</p></div>\r\n          <div><h3>Phone:</h3><p className=\"information\">123456789</p></div>\r\n          <div><h3>Address:</h3><p className=\"information\">123abc</p></div>\r\n          <div><h3>Address:</h3><p className=\"information\">123abc</p></div> */}","E:\\New folder\\Covid19_Web\\client\\src\\Components\\Success.js",[],"E:\\New folder\\Covid19_Web\\client\\src\\Components\\HistoryCard.js",["119","120"],"\r\nimport React from 'react'\r\nimport{ Row} from 'react-bootstrap'\r\n\r\nfunction HistoryCard() {\r\n    const [data, setData]= React.useState([])\r\n    const endPoint = '/api/forms'\r\n    React.useEffect(() => {\r\n        fetch(endPoint)\r\n          .then(response => response.json())\r\n          .then(data => setData(data));\r\n      }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\" style={{\r\n            marginTop:'16px',\r\n            background:'#6c757d'\r\n        }}>\r\n            <h1 className=\"text-center\">History</h1>\r\n            <div style={{ paddingTop:'16px'}}>\r\n                <Row sm=\"3\" style={{paddingLeft:'10px'}}>\r\n                {data.map(a=>{\r\n                    if(a.email === localStorage.getItem('email')){\r\n                        return(\r\n\r\n                            <div style={{paddingLeft:\"50px\"}}>\r\n                                <div className=\"card\" style={{width: '18rem', background:'#292b2c'}}>\r\n                                    <div class=\"card-body\">\r\n                                        <h3 class=\"card-title text-center\">Date:</h3>\r\n                                        <p className=\"text-center\">{a.date}</p>\r\n                                        <h4 class=\"card-title text-center\">Summary:</h4>\r\n                                        <ul className=\"card-text \">\r\n                                            <p>Symptoms: {a.symptoms}</p>\r\n                                            <p>Isolated: {a.isolated}</p>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        )  \r\n                    }\r\n                })}\r\n                </Row>\r\n            </div>\r\n            {data.map(a=>{\r\n                if(a.email !== localStorage.getItem('email'))\r\n                return(\r\n                    <div className=\"text-center\">\r\n                        <h3 style={{color:'black'}}>You have not submitted any Health Declaration</h3>\r\n                        <a href='/form'>Fill in the Health Declaration Form</a>\r\n                    </div>\r\n                )\r\n\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryCard\r\n\r\n            ",{"ruleId":"121","severity":1,"message":"122","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":11},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"121","severity":1,"message":"131","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":25},{"ruleId":"121","severity":1,"message":"132","line":27,"column":20,"nodeType":"123","messageId":"124","endLine":27,"endColumn":24},{"ruleId":"121","severity":1,"message":"133","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":28,"column":41,"nodeType":"136","messageId":"137","endLine":28,"endColumn":43},{"ruleId":"134","severity":1,"message":"135","line":34,"column":43,"nodeType":"136","messageId":"137","endLine":34,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":40,"column":35,"nodeType":"136","messageId":"137","endLine":40,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":46,"column":35,"nodeType":"136","messageId":"137","endLine":46,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":52,"column":37,"nodeType":"136","messageId":"137","endLine":52,"endColumn":39},{"ruleId":"138","severity":1,"message":"139","line":61,"column":1,"nodeType":"140","messageId":"141","endLine":65,"endColumn":80},{"ruleId":"134","severity":1,"message":"135","line":24,"column":28,"nodeType":"136","messageId":"137","endLine":24,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":47,"column":24,"nodeType":"136","messageId":"137","endLine":47,"endColumn":26},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"'CountryDropdown' is defined but never used.","'data' is assigned a value but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]